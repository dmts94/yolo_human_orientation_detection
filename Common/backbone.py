
from common_layers import convolution as conv
from common_layers import CBL, CSPBlock
from common_layers import fork_
from tensorflow.keras.layers import MaxPool2D
tiny_conv  =  [
    [3, 3, 3, 32],
    [3, 3, 32, 64],
    [3, 3, 64, 64],

    [3, 3, 32, 32],
    [3, 3, 32, 32],
    [1, 1, 32, 64],

    [3, 3, 64, 128],
    
    [3, 3, 64, 64],
    [3, 3, 64, 64],
    [1, 1, 64, 128],

    [3, 3, 128, 256],

    [3, 3, 128, 128],
    [3, 3, 128, 128],
    [1, 1, 128, 256],

    [3, 3, 512, 512]
    ]

_tiny_conv  =  [
    [3, 32],
    [3, 64],
    [3, 64],

    [3, 32],
    [3, 32],
    [1, 64],

    [3, 128],
    
    [3, 64],
    [3, 64],
    [1, 128],

    [3, 256],

    [3, 128],
    [3, 128],
    [1, 256],

    [3, 512]
    ]

conv_wts =  [
    [3,3,3,32],
    [3,3,32,64],
    [1, 1, 64, 64],
    [1, 1, 64, 64],
    [1, 1, 128, 64],
    [1, 1, 128, 64],
    [1, 1, 64, 64],
    [1, 1, 128, 128],
    [3, 3, 128, 256],
    [1, 1, 256, 128],
    [1, 1, 128, 128],
    [1, 1, 256, 256],
    [3, 3, 256, 512],
    [1, 1, 512, 256],
    [1, 1, 256, 256],
    [1, 1, 512, 512],
    [3, 3, 512, 1024],
    [1, 1, 1024, 512],
    [1, 1, 512, 512],
    [1, 1, 1024, 1024],
    [1, 1, 1024, 512],
    [3, 3, 512, 1024],
    [1, 1, 1024, 512],
    [1, 1, 2048, 512],
    [3, 3, 512, 1024],
    [1, 1, 1024, 512]
    ]

_conv_wts =  [
    [3, 32],
    [3, 64],
    [1, 64],
    [1, 64],
    [1, 64],
    [1, 64],
    [1, 64],
    [1, 128],
    [3, 256],
    [1, 128],
    [1, 128],
    [1, 256],
    [3, 512],
    [1, 256],
    [1, 256],
    [1, 512],
    [3, 1024],
    [1, 512],
    [1, 512],
    [1, 1024],
    [1, 512],
    [3, 1024],
    [1, 512],
    [1, 512],
    [3, 1024],
    [1, 512]
    ]



res_wts = [
    [64,32,64],
    [64, 64, 64],
    [128, 128, 128],
    [256, 256, 256],
    [512, 512, 512]
    ]

res_depth = [1, 2, 8, 8, 4]

fork_wts = [[1, 1, 64, 64],
            [1, 1, 128, 64],
            [1, 1, 256, 128],
            [1, 1, 512, 256],
            [1, 1, 1024, 512]
            ]

_fork_wts = [
    [1, 64],
    [1, 64],
    [1, 128],
    [1, 256],
    [1, 512],
    ]

def cross_stage_partial_darknet_53_tiny(X):

    X = conv(X, _tiny_conv[0], downsample = True)
    X = conv(X, _tiny_conv[1], downsample = True)
    
    X = CBL(X, _tiny_conv[2])
    X = CSPBlock(X, _tiny_conv[3:6])
    X = MaxPool2D(2,2, 'same')(X)

    X = CBL(X, _tiny_conv[6])
    X = CSPBlock(X, _tiny_conv[7:11])
    X = MaxPool2D(2,2,'same')(X)

    X = CBL(X, _tiny_conv[11])
    fork, X = CSPBlock(X, _tiny_conv[12:15], return_fork = True)
    X = MaxPool2D(2, 2, 'same')(X)

    X = CBL(X, _tiny_conv[15])

    return fork, X 
